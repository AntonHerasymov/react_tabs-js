{"version":3,"sources":["utils/findTabById.js","components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["findTabById","tabs","id","find","tab","Tabs","selectedTabId","onTabSelected","selectedTab","isSelectedTab","className","map","cn","href","onClick","onTabClicked","title","content","App","useState","setSelectedTabId","newTab","ReactDOM","render","document","getElementById"],"mappings":"uNAAO,SAASA,EAAYC,EAAMC,GAAK,IAAD,EACpC,iBAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIF,KAAOA,YAAnC,QAA0CD,EAAK,G,WCEpCI,EAAO,SAAC,GAId,IAHLJ,EAGI,EAHJA,KACAK,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcR,EAAYC,EAAMK,GAEhCG,EAAgB,SAAAL,GAAG,OAAIA,EAAIF,KAAOM,EAAYN,IAQpD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKQ,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAP,GAAG,OACX,oBACE,UAAQ,MAERM,UAAWE,IAAG,CACZ,YAAaH,EAAcL,KAJ/B,SAOE,mBACES,KAAI,WAAMT,EAAIF,IACd,UAAQ,UACRY,QAAS,kBArBF,SAACV,GACfK,EAAcL,IACjBG,EAAcH,GAmBWW,CAAaX,IAH9B,SAKGA,EAAIY,SAVFZ,EAAIF,WAiBjB,qBAAKQ,UAAU,QAAQ,UAAQ,aAA/B,SACGF,EAAYS,cCpCRhB,EAAO,CAClB,CAAEC,GAAI,QAASc,MAAO,QAASC,QAAS,eACxC,CAAEf,GAAI,QAASc,MAAO,QAASC,QAAS,eACxC,CAAEf,GAAI,QAASc,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAASlB,EAAK,GAAGC,IAA3D,mBAAOI,EAAP,KAAsBc,EAAtB,KAEMZ,EAAcR,EAAYC,EAAMK,GAItC,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBF,EAAYQ,SAGlC,cAAC,EAAD,CACEf,KAAMA,EACNK,cAAeA,EACfC,cAXgB,SAAAc,GAAM,OAAID,EAAiBC,EAAOnB,WCf1DoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e06c5723.chunk.js","sourcesContent":["export function findTabById(tabs, id) {\n  return tabs.find(tab => tab.id === id) ?? tabs[0];\n}\n","import cn from 'classnames';\nimport { findTabById } from '../../utils/findTabById';\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = findTabById(tabs, selectedTabId);\n\n  const isSelectedTab = tab => tab.id === selectedTab.id;\n\n  const onTabClicked = (tab) => {\n    if (!isSelectedTab(tab)) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={cn({\n                'is-active': isSelectedTab(tab),\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onTabClicked(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\nimport { findTabById } from './utils/findTabById';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = findTabById(tabs, selectedTabId);\n\n  const onTabSelected = newTab => setSelectedTabId(newTab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}